@model Paginacion<SistemaAcad.Models.Categoria>

@{
    ViewData["Title"] = "Index";
}

<h1>Listado de Categorias</h1>

<p>
    <a asp-action="Create" class="btn btn-success">Agregar Categorias</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-action no-color">
        <p>
            Filtro: <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Buscar" class="btn btn-default" />
            @if (ViewData.ContainsKey("ban"))
            {
                <a asp-action="Index" asp-route-ban="0">Mostrar Paginación</a>
            }
            else
            {
                <a asp-action="Index" asp-route-ban="1">Todos los registros</a>
            }
            Registros mostrados @Model.TotalR
        </p>
    </div>
</form>
<table class="table table-dark">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NombreSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Nombre</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DescripcionSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Descripción</a>
            </th>
            <th>
                Estado
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CarreraSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Carrera
                        </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Estado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Carrera)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.CategoriaID">Editar</a> |
                <a asp-action="Details" asp-route-id="@item.CategoriaID">Detalles</a> |
                <a asp-action="Delete" asp-route-id="@item.CategoriaID">Eliminar</a>
            </td>
        </tr>
        }
    </tbody>
</table>

@{ 
    var prevDisable = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}


<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisable">
    Previous
</a>

@for(int i=1; i<= Model.TotalPages; i++)
{
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentFilter"]"
       asp-route-pageNumber="@i"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default">@i
    </a>
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex+1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]" 
   class="btn btn-deafult @nextDisabled">Siguente
</a>